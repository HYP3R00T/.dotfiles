- name: Install zsh
  ansible.builtin.package:
    name: zsh
    state: present
  become: true
  become_user: root
  become_method: sudo

- name: Set zsh as default shell
  ansible.builtin.user:
    name: "{{ ansible_env.USER }}"
    shell: /usr/bin/zsh
    state: present
  become: true

- name: Ensure .zsh directory exists
  ansible.builtin.file:
    path: "{{ ansible_env.HOME }}/.zsh"
    state: directory
    mode: "0755"

- name: Add zsh-autosuggestions plugin
  ansible.builtin.git:
    repo: "https://github.com/zsh-users/zsh-autosuggestions.git"
    dest: "{{ ansible_env.HOME }}/.zsh/zsh-autosuggestions"
    force: yes

- name: Add zsh-syntax-highlighting plugin
  ansible.builtin.git:
    repo: "https://github.com/zsh-users/zsh-syntax-highlighting.git"
    dest: "{{ ansible_env.HOME }}/.zsh/zsh-syntax-highlighting"
    force: yes

# Replace the copy task with template task
- name: Setup base zshrc configuration
  ansible.builtin.template:
    src: zshrc.j2
    dest: "{{ ansible_env.HOME }}/.zshrc"
    owner: "{{ ansible_env.USER }}"
    group: "{{ ansible_env.USER }}"
    mode: "0644"
    backup: yes

# Optional: Add performance optimizations for plugins
- name: Configure zsh-autosuggestions performance settings
  ansible.builtin.blockinfile:
    path: "{{ ansible_env.HOME }}/.zshrc"
    marker: "# {mark} ZSH-AUTOSUGGESTIONS PERFORMANCE SETTINGS"
    block: |
      ZSH_AUTOSUGGEST_BUFFER_MAX_SIZE=20
      ZSH_AUTOSUGGEST_USE_ASYNC=true
      ZSH_AUTOSUGGEST_MANUAL_REBIND=true
      ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE="{{ zsh_autosuggest_highlight_style }}"
    insertbefore: "source ~/.zsh/zsh-autosuggestions/zsh-autosuggestions.zsh"

# - name: Add fzf-tab plugin
#   ansible.builtin.git:
#     repo: "https://github.com/Aloxaf/fzf-tab.git"
#     dest: "{{ ansible_env.HOME }}/.zsh/fzf-tab"
#     force: yes

# - name: Add fzf-tab configuration to .zshrc
#   ansible.builtin.blockinfile:
#     path: "{{ ansible_env.HOME }}/.zshrc"
#     block: |
#       zstyle ':fzf-tab:complete:cd:*' fzf-preview 'ls --color $realpath'
#       zstyle ':fzf-tab:complete:__zoxide_z:*' fzf-preview 'ls --color $realpath'
#     marker: "# {mark} fzf-tab configuration"
#     create: true
#     prepend_newline: true
#     append_newline: true
